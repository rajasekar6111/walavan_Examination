"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _Dialog = _interopRequireDefault(require("../src/Dialog"));

var makeDialogFixture = function makeDialogFixture() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/_react["default"].createElement(_Dialog["default"], (0, _extends2["default"])({
    containerProps: {
      'data-testid': 'Dialog'
    }
  }, props));
};

makeDialogFixture.displayName = "makeDialogFixture";
describe('Dialog', function () {
  it('should not crash', function () {
    expect(function () {
      return (0, _react2.render)(makeDialogFixture());
    }).not.toThrow();
  });
  it('should render content when isShown is true', function () {
    var children = 'Content';
    (0, _react2.render)(makeDialogFixture({
      isShown: true,
      children: children
    }));
    expect(_react2.screen.getByText(children)).toBeInTheDocument();
  });
  it('should not render content when isShown is false', function () {
    var children = 'Content';
    (0, _react2.render)(makeDialogFixture({
      isShown: false,
      children: children
    }));
    expect(function () {
      return _react2.screen.getByText(children);
    }).toThrow();
  });
});